class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        par = [-1]*n
        val = [1]*n
        cnt = [0]*n
        def find_set(v: int) -> int:
            if par[v] ==-1:
                return v
            par[v] = find_set(par[v])
            return par[v]

        def union(a: int,b: int) -> None:
            a = find_set(a)
            b = find_set(b)
            if a!=b:
                par[b] = a 
                val[a] += val[b]
            return 
        initial.sort()   
        for i in range(n):
            for j in range(i):
                if graph[i][j]:
                    union(i,j)
        arr = []
        for i,v in enumerate(initial):
            v = find_set(v)
            arr.append(v)
            cnt[v] += 1
        ans = initial[0]
        t = 0
        for c,s in zip(initial,arr):
            if cnt[s] == 1 and t<val[s]:
                ans = c
                t = val[s]
        return ans
            